    "exposure": "xiTypeInteger",    #Exposure time in microseconds
    "exposure_burst_count": "xiTypeInteger",    #Sets the number of times of exposure in one frame.
    "gain_selector": "xiTypeEnum",    #Gain selector for parameter Gain allows to select different type of gains.
    "gain": "xiTypeFloat",    #Gain in dB
    "downsampling": "xiTypeEnum",    #Change image resolution by binning or skipping.
    "downsampling_type": "xiTypeEnum",    #Change image downsampling type.
    "test_pattern_generator_selector": "xiTypeEnum",    #Selects which test pattern generator is controlled by the TestPattern feature.
    "test_pattern": "xiTypeEnum",    #Selects which test pattern type is generated by the selected generator.
    "imgdataformat": "xiTypeEnum",    #Output data format.
    "shutter_type": "xiTypeEnum",    #Change sensor shutter type(CMOS sensor).
    "sensor_taps": "xiTypeEnum",    #Number of taps
    "aeag": "xiTypeBoolean",    #Automatic exposure/gain
    "aeag_roi_offset_x": "xiTypeInteger",    #Automatic exposure/gain ROI offset X
    "aeag_roi_offset_y": "xiTypeInteger",    #Automatic exposure/gain ROI offset Y
    "aeag_roi_width": "xiTypeInteger",    #Automatic exposure/gain ROI Width
    "aeag_roi_height": "xiTypeInteger",    #Automatic exposure/gain ROI Height
    "bpc_list_selector": "xiTypeEnum",    #Selector of list used by Sensor Defects Correction parameter
    "sens_defects_corr_list_content": "xiTypeString",    #Sets/Gets sensor defects list in special text format
    "bpc": "xiTypeBoolean",    #Correction of sensor defects (pixels, columns, rows) enable/disable
    "auto_wb": "xiTypeBoolean",    #Automatic white balance
    "manual_wb": "xiTypeCommand",    #Calculates White Balance(xiGetImage function must be called)
    "wb_kr": "xiTypeFloat",    #White balance red coefficient
    "wb_kg": "xiTypeFloat",    #White balance green coefficient
    "wb_kb": "xiTypeFloat",    #White balance blue coefficient
    "width": "xiTypeInteger",    #Width of the Image provided by the device (in pixels).
    "height": "xiTypeInteger",    #Height of the Image provided by the device (in pixels).
    "offsetX": "xiTypeInteger",    #Horizontal offset from the origin to the area of interest (in pixels).
    "offsetY": "xiTypeInteger",    #Vertical offset from the origin to the area of interest (in pixels).
    "region_selector": "xiTypeInteger",    #Selects Region in Multiple ROI which parameters are set by width, height, ... ,region mode
    "region_mode": "xiTypeInteger",    #Activates/deactivates Region selected by Region Selector
    "horizontal_flip": "xiTypeBoolean",    #Horizontal flip enable
    "vertical_flip": "xiTypeBoolean",    #Vertical flip enable
    "ffc": "xiTypeBoolean",    #Image flat field correction
    "ffc_flat_field_file_name": "xiTypeString",    #Set name of file to be applied for FFC processor.
    "ffc_dark_field_file_name": "xiTypeString",    #Set name of file to be applied for FFC processor.
    "binning_selector": "xiTypeEnum",    #Binning engine selector.
    "binning_vertical_mode": "xiTypeEnum",    #Sets the mode to use to combine vertical pixel together.
    "binning_vertical": "xiTypeInteger",    #Vertical Binning - number of vertical photo-sensitive cells to combine together.
    "binning_horizontal_mode": "xiTypeEnum",    #Sets the mode to use to combine horizontal pixel together.
    "binning_horizontal": "xiTypeInteger",    #Horizontal Binning - number of horizontal photo-sensitive cells to combine together.
    "binning_horizontal_pattern": "xiTypeEnum",    #Binning horizontal pattern type.
    "binning_vertical_pattern": "xiTypeEnum",    #Binning vertical pattern type.
    "decimation_selector": "xiTypeEnum",    #Decimation engine selector.
    "decimation_vertical": "xiTypeInteger",    #Vertical Decimation - vertical sub-sampling of the image - reduces the vertical resolution of the image by the specified vertical decimation factor.
    "decimation_horizontal": "xiTypeInteger",    #Horizontal Decimation - horizontal sub-sampling of the image - reduces the horizontal resolution of the image by the specified vertical decimation factor.
    "decimation_horizontal_pattern": "xiTypeEnum",    #Decimation horizontal pattern type.
    "decimation_vertical_pattern": "xiTypeEnum",    #Decimation vertical pattern type.
    "exp_priority": "xiTypeFloat",    #Exposure priority (0.8 - exposure 80%, gain 20%).
    "ag_max_limit": "xiTypeFloat",    #Maximum limit of gain in AEAG procedure
    "ae_max_limit": "xiTypeInteger",    #Maximum time (us) used for exposure in AEAG procedure
    "aeag_level": "xiTypeInteger",    #Average intensity of output signal AEAG should achieve(in %)
    "limit_bandwidth": "xiTypeInteger",    #Set/get bandwidth(datarate)(in Megabits)
    "limit_bandwidth_mode": "xiTypeEnum",    #Bandwidth limit enabled
    "sensor_line_period": "xiTypeFloat",    #Image sensor line period in us
    "sensor_bit_depth": "xiTypeEnum",    #Sensor output data bit depth.
    "output_bit_depth": "xiTypeEnum",    #Device output data bit depth.
    "image_data_bit_depth": "xiTypeEnum",    #bitdepth of data returned by function xiGetImage
    "output_bit_packing": "xiTypeBoolean",    #Device output data packing (or grouping) enabled. Packing could be enabled if output_data_bit_depth > 8 and packing capability is available.
    "output_bit_packing_type": "xiTypeEnum",    #Data packing type. Some cameras supports only specific packing type.
    "iscooled": "xiTypeBoolean",    #Returns 1 for cameras that support cooling.
    "cooling": "xiTypeEnum",    #Temperature control mode.
    "target_temp": "xiTypeFloat",    #Set sensor target temperature for cooling.
    "temp_selector": "xiTypeEnum",    #Selector of mechanical point where thermometer is located.
    "temp": "xiTypeFloat",    #Camera temperature (selected by XI_PRM_TEMP_SELECTOR)
    "device_temperature_ctrl_mode": "xiTypeEnum",    #Temperature control mode.
    "chip_temp": "xiTypeFloat",    #Camera sensor temperature
    "hous_temp": "xiTypeFloat",    #Camera housing tepmerature
    "hous_back_side_temp": "xiTypeFloat",    #Camera housing back side tepmerature
    "sensor_board_temp": "xiTypeFloat",    #Camera sensor board temperature
    "device_temperature_element_sel": "xiTypeEnum",    #Temperature element selector (TEC(Peltier), Fan).
    "device_temperature_element_val": "xiTypeFloat",    #Temperature element value in percents of full control range
    "cms": "xiTypeEnum",    #Mode of color management system.
    "cms_intent": "xiTypeEnum",    #Intent of color management system.
    "apply_cms": "xiTypeBoolean",    #Enable applying of CMS profiles to xiGetImage (see XI_PRM_INPUT_CMS_PROFILE, XI_PRM_OUTPUT_CMS_PROFILE).
    "input_cms_profile": "xiTypeString",    #Filename for input cms profile (e.g. input.icc)
    "output_cms_profile": "xiTypeString",    #Filename for output cms profile (e.g. input.icc)
    "iscolor": "xiTypeBoolean",    #Returns 1 for color cameras.
    "cfa": "xiTypeEnum",    #Returns color filter array type of RAW data.
    "gammaY": "xiTypeFloat",    #Luminosity gamma
    "gammaC": "xiTypeFloat",    #Chromaticity gamma
    "sharpness": "xiTypeFloat",    #Sharpness Strenght
    "ccMTX00": "xiTypeFloat",    #Color Correction Matrix element [0][0]
    "ccMTX01": "xiTypeFloat",    #Color Correction Matrix element [0][1]
    "ccMTX02": "xiTypeFloat",    #Color Correction Matrix element [0][2]
    "ccMTX03": "xiTypeFloat",    #Color Correction Matrix element [0][3]
    "ccMTX10": "xiTypeFloat",    #Color Correction Matrix element [1][0]
    "ccMTX11": "xiTypeFloat",    #Color Correction Matrix element [1][1]
    "ccMTX12": "xiTypeFloat",    #Color Correction Matrix element [1][2]
    "ccMTX13": "xiTypeFloat",    #Color Correction Matrix element [1][3]
    "ccMTX20": "xiTypeFloat",    #Color Correction Matrix element [2][0]
    "ccMTX21": "xiTypeFloat",    #Color Correction Matrix element [2][1]
    "ccMTX22": "xiTypeFloat",    #Color Correction Matrix element [2][2]
    "ccMTX23": "xiTypeFloat",    #Color Correction Matrix element [2][3]
    "ccMTX30": "xiTypeFloat",    #Color Correction Matrix element [3][0]
    "ccMTX31": "xiTypeFloat",    #Color Correction Matrix element [3][1]
    "ccMTX32": "xiTypeFloat",    #Color Correction Matrix element [3][2]
    "ccMTX33": "xiTypeFloat",    #Color Correction Matrix element [3][3]
    "defccMTX": "xiTypeCommand",    #Set default Color Correction Matrix
    "trigger_source": "xiTypeEnum",    #Defines source of trigger.
    "trigger_software": "xiTypeCommand",    #Generates an internal trigger. XI_PRM_TRG_SOURCE must be set to TRG_SOFTWARE.
    "trigger_selector": "xiTypeEnum",    #Selects the type of trigger.
    "trigger_overlap": "xiTypeEnum",    #The mode of Trigger Overlap. This influences of trigger acception/rejection policy
    "acq_frame_burst_count": "xiTypeInteger",    #Sets number of frames acquired by burst. This burst is used only if trigger is set to FrameBurstStart
    "gpi_selector": "xiTypeEnum",    #Selects GPI
    "gpi_mode": "xiTypeEnum",    #Defines GPI functionality
    "gpi_level": "xiTypeInteger",    #GPI level
    "gpo_selector": "xiTypeEnum",    #Selects GPO
    "gpo_mode": "xiTypeEnum",    #Defines GPO functionality
    "led_selector": "xiTypeEnum",    #Selects LED
    "led_mode": "xiTypeEnum",    #Defines LED functionality
    "dbnc_en": "xiTypeBoolean",    #Enable/Disable debounce to selected GPI
    "dbnc_t0": "xiTypeInteger",    #Debounce time (x * 10us)
    "dbnc_t1": "xiTypeInteger",    #Debounce time (x * 10us)
    "dbnc_pol": "xiTypeInteger",    #Debounce polarity (pol = 1 t0 - falling edge, t1 - rising edge)
    "lens_mode": "xiTypeBoolean",    #Status of lens control interface. This shall be set to XI_ON before any Lens operations.
    "lens_aperture_value": "xiTypeFloat",    #Current lens aperture value in stops. Examples: 2.8, 4, 5.6, 8, 11
    "lens_focus_movement_value": "xiTypeInteger",    #Lens current focus movement value to be used by XI_PRM_LENS_FOCUS_MOVE in motor steps.
    "lens_focus_move": "xiTypeCommand",    #Moves lens focus motor by steps set in XI_PRM_LENS_FOCUS_MOVEMENT_VALUE.
    "lens_focus_distance": "xiTypeFloat",    #Lens focus distance in cm.
    "lens_focal_length": "xiTypeFloat",    #Lens focal distance in mm.
    "lens_feature_selector": "xiTypeEnum",    #Selects the current feature which is accessible by XI_PRM_LENS_FEATURE.
    "lens_feature": "xiTypeFloat",    #Allows access to lens feature value currently selected by XI_PRM_LENS_FEATURE_SELECTOR.
    "lens_comm_data": "xiTypeString",    #Write/Read data sequences to/from lens
    "device_name": "xiTypeString",    #Return device name
    "device_type": "xiTypeString",    #Return device type
    "device_model_id": "xiTypeInteger",    #Return device model id
    "sensor_model_id": "xiTypeInteger",    #Return device sensor model id
    "device_sn": "xiTypeString",    #Return device serial number
    "device_sens_sn": "xiTypeString",    #Return sensor serial number
    "device_id": "xiTypeString",    #Return unique device ID
    "device_inst_path": "xiTypeString",    #Return device system instance path.
    "device_loc_path": "xiTypeString",    #Represents the location of the device in the device tree.
    "device_user_id": "xiTypeString",    #Return custom ID of camera.
    "device_manifest": "xiTypeString",    #Return device capability description XML.
    "image_user_data": "xiTypeInteger",    #User image data at image header to track parameters synchronization.
    "imgdataformatrgb32alpha": "xiTypeInteger",    #The alpha channel of RGB32 output image format.
    "imgpayloadsize": "xiTypeInteger",    #Buffer size in bytes sufficient for output image returned by xiGetImage
    "transport_pixel_format": "xiTypeEnum",    #Current format of pixels on transport layer.
    "transport_data_target": "xiTypeEnum",    #Target selector for data - CPU RAM or GPU RAM
    "sensor_clock_freq_hz": "xiTypeFloat",    #Sensor clock frequency in Hz.
    "sensor_clock_freq_index": "xiTypeInteger",    #Sensor clock frequency index. Sensor with selected frequencies have possibility to set the frequency only by this index.
    "sensor_output_channel_count": "xiTypeEnum",    #Number of output channels from sensor used for data transfer.
    "framerate": "xiTypeFloat",    #Define framerate in Hz
    "counter_selector": "xiTypeEnum",    #Select counter
    "counter_value": "xiTypeInteger",    #Counter status
    "acq_timing_mode": "xiTypeEnum",    #Type of sensor frames timing.
    "available_bandwidth": "xiTypeInteger",    #Measure and return available interface bandwidth(int Megabits)
    "buffer_policy": "xiTypeEnum",    #Data move policy
    "LUTEnable": "xiTypeBoolean",    #Activates LUT.
    "LUTIndex": "xiTypeInteger",    #Control the index (offset) of the coefficient to access in the LUT.
    "LUTValue": "xiTypeInteger",    #Value at entry LUTIndex of the LUT
    "trigger_delay": "xiTypeInteger",    #Specifies the delay in microseconds (us) to apply after the trigger reception before activating it.
    "ts_rst_mode": "xiTypeEnum",    #Defines how time stamp reset engine will be armed
    "ts_rst_source": "xiTypeEnum",    #Defines which source will be used for timestamp reset. Writing this parameter will trigger settings of engine (arming)
    "isexist": "xiTypeBoolean",    #Returns 1 if camera connected and works properly.
    "acq_buffer_size": "xiTypeInteger",    #Acquisition buffer size in buffer_size_unit. Default bytes.
    "acq_buffer_size_unit": "xiTypeInteger",    #Acquisition buffer size unit in bytes. Default 1. E.g. Value 1024 means that buffer_size is in KiBytes
    "acq_transport_buffer_size": "xiTypeInteger",    #Acquisition transport buffer size in bytes
    "acq_transport_packet_size": "xiTypeInteger",    #Acquisition transport packet size in bytes
    "buffers_queue_size": "xiTypeInteger",    #Queue of field/frame buffers
    "acq_transport_buffer_commit": "xiTypeInteger",    #Number of buffers to commit to low level
    "recent_frame": "xiTypeBoolean",    #GetImage returns most recent frame
    "device_reset": "xiTypeCommand",    #Resets the camera to default state.
    "column_fpn_correction": "xiTypeEnum",    #Correction of column FPN
    "row_fpn_correction": "xiTypeEnum",    #Correction of row FPN
    "image_correction_selector": "xiTypeEnum",    #Select image correction function
    "image_correction_value": "xiTypeFloat",    #Select image correction selected function value
    "sensor_mode": "xiTypeEnum",    #Current sensor mode. Allows to select sensor mode by one integer. Setting of this parameter affects: image dimensions and downsampling.
    "hdr": "xiTypeBoolean",    #Enable High Dynamic Range feature.
    "hdr_kneepoint_count": "xiTypeInteger",    #The number of kneepoints in the PWLR.
    "hdr_t1": "xiTypeInteger",    #position of first kneepoint(in % of XI_PRM_EXPOSURE)
    "hdr_t2": "xiTypeInteger",    #position of second kneepoint (in % of XI_PRM_EXPOSURE)
    "hdr_kneepoint1": "xiTypeInteger",    #value of first kneepoint (% of sensor saturation)
    "hdr_kneepoint2": "xiTypeInteger",    #value of second kneepoint (% of sensor saturation)
    "image_black_level": "xiTypeInteger",    #Last image black level counts. Can be used for Offline processing to recall it.
    "api_version": "xiTypeString",    #Returns version of API.
    "drv_version": "xiTypeString",    #Returns version of current device driver.
    "version_mcu1": "xiTypeString",    #Returns version of MCU1 firmware.
    "version_mcu2": "xiTypeString",    #Returns version of MCU2 firmware.
    "version_mcu3": "xiTypeString",    #Returns version of MCU3 firmware.
    "version_fpga1": "xiTypeString",    #Returns version of FPGA1 firmware.
    "version_xmlman": "xiTypeString",    #Returns version of XML manifest.
    "hw_revision": "xiTypeString",    #Returns hardware revision number.
    "debug_level": "xiTypeEnum",    #Set debug level
    "auto_bandwidth_calculation": "xiTypeBoolean",    #Automatic bandwidth calculation,
    "new_process_chain_enable": "xiTypeBoolean",    #Enables (2015/FAPI) processing chain for MQ MU cameras
    "cam_enum_golden_enabled": "xiTypeBoolean",    #Enable enumeration of golden devices
    "reset_usb_if_bootloader": "xiTypeBoolean",    #Resets USB device if started as bootloader
    "cam_simulators_count": "xiTypeInteger",    #Number of camera simulators to be available.
    "cam_sensor_init_disabled": "xiTypeBoolean",    #Camera sensor will not be initialized when 1=XI_ON is set.
    "read_file_ffs": "xiTypeString",    #Read file from camera flash filesystem.
    "write_file_ffs": "xiTypeString",    #Write file to camera flash filesystem.
    "ffs_file_name": "xiTypeString",    #Set name of file to be written/read from camera FFS.
    "ffs_file_id": "xiTypeInteger",    #File number.
    "ffs_file_size": "xiTypeInteger",    #Size of file.
    "free_ffs_size": "xiTypeInteger",    #Size of free camera FFS.
    "used_ffs_size": "xiTypeInteger",    #Size of used camera FFS.
    "ffs_access_key": "xiTypeInteger",    #Setting of key enables file operations on some cameras.
    "xiapi_context_list": "xiTypeString",    #List of current parameters settings context - parameters with values. Used for offline processing.
    "sensor_feature_selector": "xiTypeEnum",    #Selects the current feature which is accessible by XI_PRM_SENSOR_FEATURE_VALUE.
    "sensor_feature_value": "xiTypeInteger",    #Allows access to sensor feature value currently selected by XI_PRM_SENSOR_FEATURE_SELECTOR.
    "ext_feature_selector": "xiTypeEnum",    #Selection of extended feature.
    "ext_feature": "xiTypeInteger",    #Extended feature value.
    "device_unit_selector": "xiTypeEnum",    #Selects device unit.
    "device_unit_register_selector": "xiTypeInteger",    #Selects register of selected device unit(XI_PRM_DEVICE_UNIT_SELECTOR).
    "device_unit_register_value": "xiTypeInteger",    #Sets/gets register value of selected device unit(XI_PRM_DEVICE_UNIT_SELECTOR).
    "api_progress_callback": "xiTypeString",    #Callback address of pointer that is called upon long tasks (e.g. XI_PRM_WRITE_FILE_FFS).
    "acquisition_status_selector": "xiTypeEnum",    #Selects the internal acquisition signal to read using XI_PRM_ACQUISITION_STATUS.
    "acquisition_status": "xiTypeEnum",    #Acquisition status(True/False)
