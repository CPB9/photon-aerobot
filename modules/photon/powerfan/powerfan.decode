module powerfan

enum BldcId {
    Bldc1,
    Bldc2,
}

type PresetName = &[char; 32];

struct A4960Config {
    name: [char; 32],
    CB: u8,
    BT: u8,
    DT: u8,
    VR: u8,
    VT: u8,
    PT: u8,
    IDS: u8,
    HQ: u8,
    HT: u8,
    EC: u8,
    SC: u8,
    PA: u8,
    RQ: u8,
    RR: u8,
    BH: u8,
    BW: u8,
    ESF: u8,
    DG: u8,
    RSC: u8,
    BRK: u8,
    DIR: u8,
    RUN: u8,
}

enum Reg {
    CB,
    BT,
    DT,
    VR,
    VT,
    PT,
    IDS,
    HQ,
    HT,
    EC,
    SC,
    PA,
    RQ,
    RR,
    BH,
    BW,
    ESF,
    DG,
    RSC,
    BRK,
    DIR,
    RUN,
}

struct Bldc {
    speed: u32,
    config: A4960Config,
}

struct Pwm {
    outDuty: f32,
    length: u16,
    input: u16,
    step: u16,
}

component {
    variables {
        bldc1: Bldc,
        bldc2: Bldc,
        pwm1: Pwm,
        pwm2: Pwm,
    }

    commands {
        fn stop()
        fn setFlow(flow: f32)
        fn run(id: BldcId)
        fn applyCurrentPreset(id: BldcId)
        fn setCurrentPreset(id: BldcId, preset: A4960Config)
        fn setCurrentPresetName(id: BldcId, name: PresetName)
        fn setCurrentPresetReg(id: BldcId, reg: Reg, value: u8)
        fn pwmSetDuty(id: BldcId, value: f64)
        fn pwmSetStep(id: BldcId, value: u16)
    }

    statuses {
        [all, 1, true]: {bldc1, bldc2, pwm1, pwm2}
    }
}
